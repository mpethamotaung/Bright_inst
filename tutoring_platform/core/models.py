from django.contrib.auth.models import AbstractUser, Group, Permission
from django.db import models
from django.utils.translation import gettext_lazy as _

class User(AbstractUser):
    is_tutor = models.BooleanField(default=False)
    is_student = models.BooleanField(default=True)
    bio = models.TextField(blank=True, null=True)

    # Add related_name arguments to avoid clashes
    groups = models.ManyToManyField(Group, verbose_name=_('groups'), blank=True, related_name='core_user_groups')
    user_permissions = models.ManyToManyField(
        Permission,
        verbose_name=_('user permissions'),
        blank=True,
        related_name='core_user_permissions',
        help_text=_('Specific permissions for this user.'),
        error_messages={
            'blank': _('This field cannot be blank.'),
        },
    )


#Subject Class(Generated by Tutor/Staff)
class Subject(models.Model):
    name = models.CharField(max_length=100)

#Session class, regulated Tutor & Student session
class Session(models.Model):
    tutor = models.ForeignKey(User, related_name='tutoring_sessions', on_delete=models.CASCADE)
    student = models.ForeignKey(User, related_name='learning_sessions', on_delete=models.CASCADE)
    subject = models.ForeignKey(Subject, on_delete=models.CASCADE)
    scheduled_time = models.DateTimeField()